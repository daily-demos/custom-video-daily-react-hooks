/*
  CSS grid is great for making video layouts.
  For the purposes of this demo, we're keeping things relatively simple.
  We've designed our app assuming two participants, max. By using the power of CSS grid, our video
  call layout will still look okay when there are more than two users.
.*/
.call {
  display: grid;
  margin: auto;
  align-items: center;
  justify-items: center;
  grid-template-columns: 1fr 1fr;
  grid-auto-rows: 1fr;
  grid-column-gap: 30px;
  grid-row-gap: 30px;
  max-width: 80%;
  max-height: 80%;
}

.is-screenshare {
  grid-template-rows: fit-content(50%);
  margin: 5rem auto 5rem auto;
}

/*
  We're hard coding the video sizes here. This makes our grid a little less flexible/dynamic. If you're interested in
  dynamic video grids, make sure to check out this blog post:
  https://www.daily.co/blog/add-pagination-to-a-custom-daily-video-chat-app-to-support-larger-meetings/
 */
.self-view {
  width: 480px;
  height: 270px;
}

/*
  When someone is sharing their screen, we want to resize the participants' videos,
  so the biggest screen in our grid is the screen share.
 */
.is-screenshare .self-view {
  width: 240px;
  height: 135px;
  grid-row: 2;
  justify-self: start;
}

.self-view video {
  /* Mirror the self-view: it's weird not seeing yourself mirrored! */
  transform: rotate3d(0, 1, 0, 180deg);
}

.info-box {
  background: var(--dark-blue-border);
  color: var(--white);
  width: 480px;
  height: 270px;
  display: flex;
  justify-content: center;
  flex-direction: column;
  text-align: center;
  padding: 3rem;
  box-sizing: border-box;
  border-radius: 4px;
}

.room-url {
  padding: 0 1rem;
  word-break: break-all;
  font-weight: normal;
}
